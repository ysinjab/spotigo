// ProductInfo.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: albums.proto

package albums

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_albums_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_albums_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_albums_proto_rawDescGZIP(), []int{0}
}

func (x *Album) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Album) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *AlbumList) Reset() {
	*x = AlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_albums_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumList) ProtoMessage() {}

func (x *AlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_albums_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumList.ProtoReflect.Descriptor instead.
func (*AlbumList) Descriptor() ([]byte, []int) {
	return file_albums_proto_rawDescGZIP(), []int{1}
}

func (x *AlbumList) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_albums_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_albums_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_albums_proto_rawDescGZIP(), []int{2}
}

var File_albums_proto protoreflect.FileDescriptor

var file_albums_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0x33, 0x0a, 0x06, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x0d, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_albums_proto_rawDescOnce sync.Once
	file_albums_proto_rawDescData = file_albums_proto_rawDesc
)

func file_albums_proto_rawDescGZIP() []byte {
	file_albums_proto_rawDescOnce.Do(func() {
		file_albums_proto_rawDescData = protoimpl.X.CompressGZIP(file_albums_proto_rawDescData)
	})
	return file_albums_proto_rawDescData
}

var file_albums_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_albums_proto_goTypes = []interface{}{
	(*Album)(nil),     // 0: albums.Album
	(*AlbumList)(nil), // 1: albums.AlbumList
	(*Empty)(nil),     // 2: albums.Empty
}
var file_albums_proto_depIdxs = []int32{
	0, // 0: albums.AlbumList.albums:type_name -> albums.Album
	2, // 1: albums.Albums.GetAlbums:input_type -> albums.Empty
	0, // 2: albums.Albums.GetAlbums:output_type -> albums.Album
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_albums_proto_init() }
func file_albums_proto_init() {
	if File_albums_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_albums_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_albums_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_albums_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_albums_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_albums_proto_goTypes,
		DependencyIndexes: file_albums_proto_depIdxs,
		MessageInfos:      file_albums_proto_msgTypes,
	}.Build()
	File_albums_proto = out.File
	file_albums_proto_rawDesc = nil
	file_albums_proto_goTypes = nil
	file_albums_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlbumsClient is the client API for Albums service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlbumsClient interface {
	GetAlbums(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Album, error)
}

type albumsClient struct {
	cc grpc.ClientConnInterface
}

func NewAlbumsClient(cc grpc.ClientConnInterface) AlbumsClient {
	return &albumsClient{cc}
}

func (c *albumsClient) GetAlbums(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Album, error) {
	out := new(Album)
	err := c.cc.Invoke(ctx, "/albums.Albums/GetAlbums", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlbumsServer is the server API for Albums service.
type AlbumsServer interface {
	GetAlbums(context.Context, *Empty) (*Album, error)
}

// UnimplementedAlbumsServer can be embedded to have forward compatible implementations.
type UnimplementedAlbumsServer struct {
}

func (*UnimplementedAlbumsServer) GetAlbums(context.Context, *Empty) (*Album, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlbums not implemented")
}

func RegisterAlbumsServer(s *grpc.Server, srv AlbumsServer) {
	s.RegisterService(&_Albums_serviceDesc, srv)
}

func _Albums_GetAlbums_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlbumsServer).GetAlbums(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/albums.Albums/GetAlbums",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlbumsServer).GetAlbums(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Albums_serviceDesc = grpc.ServiceDesc{
	ServiceName: "albums.Albums",
	HandlerType: (*AlbumsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAlbums",
			Handler:    _Albums_GetAlbums_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "albums.proto",
}
